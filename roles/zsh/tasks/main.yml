---
# tuto for this script has been found here : https://it.izero.fr/ansible-installation-et-personnalisation-de-zsh-sur-xubuntu-20-04/

# Install zsh
- name: Install necessary zsh packages
  become: True
  apt:
    pkg: "{{ item }}"
    state: latest
    update_cache: True
  loop: "{{ packages_to_install }}"
  tags: apt

- name: Create .zsh directory
  become: False
  file:
    path: "{{ ansible_env.HOME }}/.zsh"
    state: directory
    mode: 0755
  tags: dir

# Install Oh My Zsh
- name: Check if oh-my-zsh is already installed
  become: False
  stat:
    path: "{{ ansible_env.HOME }}/.oh-my-zsh"
  register: ohmyzsh_package_check

- name: Clone oh-my-zsh if it's not installed
  become: False
  # core.autocrlf=input prevents https://github.com/robbyrussell/oh-my-zsh/issues/4402
  command: 'git clone -c core.autocrlf=input --depth=1 https://github.com/robbyrussell/oh-my-zsh.git .oh-my-zsh'
  args:
    chdir: '{{ ansible_env.HOME }}'
    creates: '{{ ansible_env.HOME }}/.oh-my-zsh'
  when: ohmyzsh_package_check.stat.exists == False

- name: Set permissions of oh-my-zsh
  become: False
  file:
    path: '{{ ansible_env.HOME }}/.oh-my-zsh'
    # Prevent the cloned repository from having insecure permissions. Failing to do
    # so causes compinit() calls to fail with "command not found: compdef" errors
    # for users with insecure umasks (e.g., "002", allowing group writability).
    mode: 0755
    recurse: yes
  when: ohmyzsh_package_check.stat.exists == False

# Install powerlevel10k theme
- name: Check if powerlevel10k is already installed
  become: False
  stat:
    path: "{{ ansible_env.HOME }}/.oh-my-zsh/custom/themes/powerlevel10k"
  register: powerlevel10k_package_check

- name: Install powerlevel10k theme if not installed
  become: False
  git:
    repo: "{{ powerlevel10k_theme_url }}"
    dest: "{{ ansible_env.HOME }}/.oh-my-zsh/custom/themes/powerlevel10k"
  when: powerlevel10k_package_check.stat.exists == False
  tags: git

- name: Install zsh-autosuggestions plugin
  become: false
  git:
    repo: "{{ zsh_autosuggestions_git_url }}"
    dest: "{{ ansible_env.HOME }}/.oh-my-zsh/custom/plugins/zsh-autosuggestions"

- name: Install zsh-autosuggestions plugin
  become: false
  git:
    repo: "{{ zsh_syntax_highlighting_git_url }}"
    dest: "{{ ansible_env.HOME }}/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting"

- name: Install zsh-autosuggestions plugin
  become: false
  git:
    repo: "{{ zsh_completions_git_url }}"
    dest: "{{ ansible_env.HOME }}/.oh-my-zsh/custom/plugins/zsh-completions"
    
# update zsh with my configs
- name: Copy personnal .zshrc file
  become: False
  copy:
    src: "zsh/.zshrc"
    dest: "{{ ansible_env.HOME }}/.zshrc"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0644
  tags: copy

- name: Copy personnal .p10k.zsh file
  become: False
  copy:
    src: "zsh/.p10k.zsh"
    dest: "{{ ansible_env.HOME }}/.p10k.zsh"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0644
  tags: copy

# Change default shell to zsh for current user
- name: Set default shell
  become: True
  user:
    name: "{{ ansible_user }}"
    shell: /bin/zsh

# Change default shell to zsh for all users
# tuto find on this post : https://stackoverflow.com/questions/31624649/how-can-i-get-a-secure-system-wide-oh-my-zsh-configuration
- name: Set default shell to zsh when creating a new user
  become: True
  lineinfile:
    path: /etc/adduser.conf
    state: present
    regexp: '^#?DSHELL'
    line: 'DSHELL=/bin/zsh'

- name: Set default shell to zsh when creating a new user
  become: True
  lineinfile:
    path: /etc/default/useradd
    state: present
    regexp: '^#?SHELL'
    line: 'SHELL=/bin/zsh'

- name: Copy personnal .zshrc file
  become: True
  copy:
    src: "zsh/.zshrc"
    dest: "/etc/skel/"
    owner: "root"
    group: "root"
    mode: 0644
  tags: copy

- name: Copy personnal .p10k.zsh file
  become: True
  copy:
    src: "zsh/.p10k.zsh"
    dest: "/etc/skel/"
    owner: "root"
    group: "root"
    mode: 0644
  tags: copy
